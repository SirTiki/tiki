TODO:

2. Host tikijs.com at EC2
3. Publish code @ github.com/SirTiki/tiki
4. README / sirtiki.com
5. Focus on installation
6. Module publishing
7. Establish if-modified header (for beta)
8. Add relative path support "jquery/subJQuery"
10. Verify jQuery works
11. Verify publishing to remote DB

Later?:
	- Relative dependencies: "step/hello", "./hello" or "package/hello"?
	- Dependency range should originate from meta-data, not name
	- Module DNE
	- HTTPS
	- tiki.define dependency fails b/c tiki.define never goes through tiki.define
	- Handle client localStorage limit
	- Handle cross-domain localStorage race condition (watch event on localStorage)
	- Setup automatic CouchDB replication for backup (publish to iris couch? replicate from?)

	- Kill switch: 
		- Force hard-refresh/revert on error (may need async trycatch)
		- Immediately setTimeout(fn,10000) to do a hard refresh, clear on successful load
			- This could be a problem if the XHR fails, check succesful XHR before clear
	- Tie SS tempId to id (wtf?)
	- AppId / Authentication
	
	
Beta (sorted):
	- Add metrics to everything
		- client-side requires
		- requests
		- TTI, TTL, cold-cache, hot-cache, warm-cache
	- Conditional dependencies
	- Incentive to no clutter public namespace/storage (Licensing?)!!!
	- Add all the modules from http://packages.dojofoundation.org/
	- Add common modules like jquery, underscore, etc...
	- Add modular jquery (jquip?)
	- AMD solutionÂ  for node
	- Handle circular dependencies (npm already does?, npm-install)
	- AppId Authentication??
	- Finish rebranding npmjs.org
	- WebSockets: setup immediately & switch over OR HTTP pipeline a la BigPipe
	- bpm.config support (unnecessary complexity?)

1.?:
	- Services ($)
	- Code Licensing ($)
	- Private repo ($)
	- Github integration ($) (for private repos)
	- Site-based repo => interesting thought, a separate repo per site...?
	- Facebook BigPipe / site bootstrap 

	
Considerations:
	- Move server.js to CouchDB?
	
	
	
	
	
	
	
	
	
	
	
DOCUMENTATION:
	
Eval:

	used b/c:
	1. script.text debugging doesn't maintain line number
 	2. dynamic remote script tag source cannot be obtained
 	3. Function(source) is not global
 	- May want to use textNode for "production" / give option

define():
	1. dynamic/runtime module definition
	2. separation of definition & build (parse & execute)
	3. Mapping of dependencies to arguments rather than relying on globals
	4. Enforcement of API exporting rather than global declaration (exports / return)
	5. Attempted sandboxing, later allowing whitelisting 

Module Whitelisting Tiers:
	0. Script: No define specified, raw Javascript
	1. Module: AMD compliant
	2. Whitelisted: AMD compliant and verified
	
	
CouchDB:

npm install -g replicate #built in replication fails
# May generate errors that modules are not globally defined
replicate http://isaacs.ic.ht/registry http://127.0.0.1:5984/npm






Tax and Legal Solutions
PO Box 298 San Clemente, CA 92674
4635516487141269
2/15
807